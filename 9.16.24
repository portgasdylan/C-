// ConsoleApplication2.cpp : This file contains the 'main' function. Program execution begins and ends there.
// 4 OOP Properties

#include <iostream>
using namespace std;
//Base Class
class Human {
private:   // Abstraction: displaying only essential information
    string fName;
    string lName;
    int age;
    int idNumber;
public:
    Human(string fName, string lName, int age, int idNumber) { // Constructor
        this->fName = fName;
        this->lName = lName;
        this->age = age;
        this->idNumber = idNumber;
    }
    void setFName(string setFName) { //Setters and Getters
        fName = setFName;
    }
    string getFName() {
        cout << fName << endl;
        return fName;
    }
    void setLName(string setLName) {
        lName = setLName;
    }
    string getLName() {
        cout << lName << endl;
        return lName;
    }
    void setAge(int setAge) {
        age = setAge;
    }
    int getAge() {
        cout << age << endl;
        return age;
    }
    void setIdNumber(int setIdNumber) {
        idNumber = setIdNumber;
    }
    int getIdNumber() {
        cout << idNumber << endl;
        return idNumber;
    }
    void breath() { //Methods: Functions
        cout << "Humans can breath!" << endl;
    }
    void walk() {
        cout << "Humans can walk!" << endl;
    }
    void greet() {
        cout << "Humans can greet!" << endl;
    }
    void eat() {
        cout << "Humans can eat!" << endl;
    }
};
class American : public Human {
    using Human::Human;
public:
    void eat() {
        cout << "Americans eat alot" << endl;
    }
};

int main()
{
    Human human1("Adam", "Eve", 4500, 001);
    human1.eat();
    human1.breath();
    human1.greet();
    American american1("John", "Doe", 19, 002);
    american1.eat();
    american1.breath();
    american1.greet();
    
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
